# coding: utf-8

"""
    DataDomain Rest API Documentation

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from dd_sdk_1_0.configuration import Configuration


class AlertDetail(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'str',
        'alert_id': 'str',
        'object_id': 'str',
        'event_id': 'str',
        'name': 'str',
        'alert_gen_epoch': 'int',
        'clear_epoch': 'int',
        'msg': 'str',
        'additional_info': 'str',
        'clear_additional_info': 'str',
        'status': 'AlertStatus',
        '_class': 'AlertClass',
        'severity': 'AlertSeverity',
        'action': 'str',
        'description': 'str',
        'node_id': 'int',
        'system_name': 'str',
        'timezone': 'str',
        'tenant_name': 'str',
        'ha_system_name': 'str',
        'link': 'list[RestLinkRep]'
    }

    attribute_map = {
        'id': 'id',
        'alert_id': 'alert_id',
        'object_id': 'object_id',
        'event_id': 'event_id',
        'name': 'name',
        'alert_gen_epoch': 'alert_gen_epoch',
        'clear_epoch': 'clear_epoch',
        'msg': 'msg',
        'additional_info': 'additional_info',
        'clear_additional_info': 'clear_additional_info',
        'status': 'status',
        '_class': 'class',
        'severity': 'severity',
        'action': 'action',
        'description': 'description',
        'node_id': 'node_id',
        'system_name': 'system_name',
        'timezone': 'timezone',
        'tenant_name': 'tenant_name',
        'ha_system_name': 'ha_system_name',
        'link': 'link'
    }

    def __init__(self, id=None, alert_id=None, object_id=None, event_id=None, name=None, alert_gen_epoch=None, clear_epoch=None, msg=None, additional_info=None, clear_additional_info=None, status=None, _class=None, severity=None, action=None, description=None, node_id=None, system_name=None, timezone=None, tenant_name=None, ha_system_name=None, link=None, _configuration=None):  # noqa: E501
        """AlertDetail - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._id = None
        self._alert_id = None
        self._object_id = None
        self._event_id = None
        self._name = None
        self._alert_gen_epoch = None
        self._clear_epoch = None
        self._msg = None
        self._additional_info = None
        self._clear_additional_info = None
        self._status = None
        self.__class = None
        self._severity = None
        self._action = None
        self._description = None
        self._node_id = None
        self._system_name = None
        self._timezone = None
        self._tenant_name = None
        self._ha_system_name = None
        self._link = None
        self.discriminator = None

        self.id = id
        if alert_id is not None:
            self.alert_id = alert_id
        if object_id is not None:
            self.object_id = object_id
        if event_id is not None:
            self.event_id = event_id
        if name is not None:
            self.name = name
        if alert_gen_epoch is not None:
            self.alert_gen_epoch = alert_gen_epoch
        if clear_epoch is not None:
            self.clear_epoch = clear_epoch
        if msg is not None:
            self.msg = msg
        if additional_info is not None:
            self.additional_info = additional_info
        if clear_additional_info is not None:
            self.clear_additional_info = clear_additional_info
        if status is not None:
            self.status = status
        if _class is not None:
            self._class = _class
        if severity is not None:
            self.severity = severity
        if action is not None:
            self.action = action
        if description is not None:
            self.description = description
        if node_id is not None:
            self.node_id = node_id
        if system_name is not None:
            self.system_name = system_name
        if timezone is not None:
            self.timezone = timezone
        if tenant_name is not None:
            self.tenant_name = tenant_name
        if ha_system_name is not None:
            self.ha_system_name = ha_system_name
        if link is not None:
            self.link = link

    @property
    def id(self):
        """Gets the id of this AlertDetail.  # noqa: E501

        urlencoded combination of system_id, node_id and alert_id. For DDR or managed DDR, the system_id and node_id is 0.  # noqa: E501

        :return: The id of this AlertDetail.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this AlertDetail.

        urlencoded combination of system_id, node_id and alert_id. For DDR or managed DDR, the system_id and node_id is 0.  # noqa: E501

        :param id: The id of this AlertDetail.  # noqa: E501
        :type: str
        """
        if self._configuration.client_side_validation and id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")  # noqa: E501

        self._id = id

    @property
    def alert_id(self):
        """Gets the alert_id of this AlertDetail.  # noqa: E501


        :return: The alert_id of this AlertDetail.  # noqa: E501
        :rtype: str
        """
        return self._alert_id

    @alert_id.setter
    def alert_id(self, alert_id):
        """Sets the alert_id of this AlertDetail.


        :param alert_id: The alert_id of this AlertDetail.  # noqa: E501
        :type: str
        """

        self._alert_id = alert_id

    @property
    def object_id(self):
        """Gets the object_id of this AlertDetail.  # noqa: E501


        :return: The object_id of this AlertDetail.  # noqa: E501
        :rtype: str
        """
        return self._object_id

    @object_id.setter
    def object_id(self, object_id):
        """Sets the object_id of this AlertDetail.


        :param object_id: The object_id of this AlertDetail.  # noqa: E501
        :type: str
        """

        self._object_id = object_id

    @property
    def event_id(self):
        """Gets the event_id of this AlertDetail.  # noqa: E501


        :return: The event_id of this AlertDetail.  # noqa: E501
        :rtype: str
        """
        return self._event_id

    @event_id.setter
    def event_id(self, event_id):
        """Sets the event_id of this AlertDetail.


        :param event_id: The event_id of this AlertDetail.  # noqa: E501
        :type: str
        """

        self._event_id = event_id

    @property
    def name(self):
        """Gets the name of this AlertDetail.  # noqa: E501


        :return: The name of this AlertDetail.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this AlertDetail.


        :param name: The name of this AlertDetail.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def alert_gen_epoch(self):
        """Gets the alert_gen_epoch of this AlertDetail.  # noqa: E501

        alert post/generate epoch  # noqa: E501

        :return: The alert_gen_epoch of this AlertDetail.  # noqa: E501
        :rtype: int
        """
        return self._alert_gen_epoch

    @alert_gen_epoch.setter
    def alert_gen_epoch(self, alert_gen_epoch):
        """Sets the alert_gen_epoch of this AlertDetail.

        alert post/generate epoch  # noqa: E501

        :param alert_gen_epoch: The alert_gen_epoch of this AlertDetail.  # noqa: E501
        :type: int
        """
        if (self._configuration.client_side_validation and
                alert_gen_epoch is not None and alert_gen_epoch < 0):  # noqa: E501
            raise ValueError("Invalid value for `alert_gen_epoch`, must be a value greater than or equal to `0`")  # noqa: E501

        self._alert_gen_epoch = alert_gen_epoch

    @property
    def clear_epoch(self):
        """Gets the clear_epoch of this AlertDetail.  # noqa: E501

        alert clear epoch  # noqa: E501

        :return: The clear_epoch of this AlertDetail.  # noqa: E501
        :rtype: int
        """
        return self._clear_epoch

    @clear_epoch.setter
    def clear_epoch(self, clear_epoch):
        """Sets the clear_epoch of this AlertDetail.

        alert clear epoch  # noqa: E501

        :param clear_epoch: The clear_epoch of this AlertDetail.  # noqa: E501
        :type: int
        """
        if (self._configuration.client_side_validation and
                clear_epoch is not None and clear_epoch < 0):  # noqa: E501
            raise ValueError("Invalid value for `clear_epoch`, must be a value greater than or equal to `0`")  # noqa: E501

        self._clear_epoch = clear_epoch

    @property
    def msg(self):
        """Gets the msg of this AlertDetail.  # noqa: E501


        :return: The msg of this AlertDetail.  # noqa: E501
        :rtype: str
        """
        return self._msg

    @msg.setter
    def msg(self, msg):
        """Sets the msg of this AlertDetail.


        :param msg: The msg of this AlertDetail.  # noqa: E501
        :type: str
        """

        self._msg = msg

    @property
    def additional_info(self):
        """Gets the additional_info of this AlertDetail.  # noqa: E501


        :return: The additional_info of this AlertDetail.  # noqa: E501
        :rtype: str
        """
        return self._additional_info

    @additional_info.setter
    def additional_info(self, additional_info):
        """Sets the additional_info of this AlertDetail.


        :param additional_info: The additional_info of this AlertDetail.  # noqa: E501
        :type: str
        """

        self._additional_info = additional_info

    @property
    def clear_additional_info(self):
        """Gets the clear_additional_info of this AlertDetail.  # noqa: E501


        :return: The clear_additional_info of this AlertDetail.  # noqa: E501
        :rtype: str
        """
        return self._clear_additional_info

    @clear_additional_info.setter
    def clear_additional_info(self, clear_additional_info):
        """Sets the clear_additional_info of this AlertDetail.


        :param clear_additional_info: The clear_additional_info of this AlertDetail.  # noqa: E501
        :type: str
        """

        self._clear_additional_info = clear_additional_info

    @property
    def status(self):
        """Gets the status of this AlertDetail.  # noqa: E501


        :return: The status of this AlertDetail.  # noqa: E501
        :rtype: AlertStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this AlertDetail.


        :param status: The status of this AlertDetail.  # noqa: E501
        :type: AlertStatus
        """

        self._status = status

    @property
    def _class(self):
        """Gets the _class of this AlertDetail.  # noqa: E501


        :return: The _class of this AlertDetail.  # noqa: E501
        :rtype: AlertClass
        """
        return self.__class

    @_class.setter
    def _class(self, _class):
        """Sets the _class of this AlertDetail.


        :param _class: The _class of this AlertDetail.  # noqa: E501
        :type: AlertClass
        """

        self.__class = _class

    @property
    def severity(self):
        """Gets the severity of this AlertDetail.  # noqa: E501


        :return: The severity of this AlertDetail.  # noqa: E501
        :rtype: AlertSeverity
        """
        return self._severity

    @severity.setter
    def severity(self, severity):
        """Sets the severity of this AlertDetail.


        :param severity: The severity of this AlertDetail.  # noqa: E501
        :type: AlertSeverity
        """

        self._severity = severity

    @property
    def action(self):
        """Gets the action of this AlertDetail.  # noqa: E501


        :return: The action of this AlertDetail.  # noqa: E501
        :rtype: str
        """
        return self._action

    @action.setter
    def action(self, action):
        """Sets the action of this AlertDetail.


        :param action: The action of this AlertDetail.  # noqa: E501
        :type: str
        """

        self._action = action

    @property
    def description(self):
        """Gets the description of this AlertDetail.  # noqa: E501


        :return: The description of this AlertDetail.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this AlertDetail.


        :param description: The description of this AlertDetail.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def node_id(self):
        """Gets the node_id of this AlertDetail.  # noqa: E501


        :return: The node_id of this AlertDetail.  # noqa: E501
        :rtype: int
        """
        return self._node_id

    @node_id.setter
    def node_id(self, node_id):
        """Sets the node_id of this AlertDetail.


        :param node_id: The node_id of this AlertDetail.  # noqa: E501
        :type: int
        """
        if (self._configuration.client_side_validation and
                node_id is not None and node_id < 0):  # noqa: E501
            raise ValueError("Invalid value for `node_id`, must be a value greater than or equal to `0`")  # noqa: E501

        self._node_id = node_id

    @property
    def system_name(self):
        """Gets the system_name of this AlertDetail.  # noqa: E501


        :return: The system_name of this AlertDetail.  # noqa: E501
        :rtype: str
        """
        return self._system_name

    @system_name.setter
    def system_name(self, system_name):
        """Sets the system_name of this AlertDetail.


        :param system_name: The system_name of this AlertDetail.  # noqa: E501
        :type: str
        """

        self._system_name = system_name

    @property
    def timezone(self):
        """Gets the timezone of this AlertDetail.  # noqa: E501


        :return: The timezone of this AlertDetail.  # noqa: E501
        :rtype: str
        """
        return self._timezone

    @timezone.setter
    def timezone(self, timezone):
        """Sets the timezone of this AlertDetail.


        :param timezone: The timezone of this AlertDetail.  # noqa: E501
        :type: str
        """

        self._timezone = timezone

    @property
    def tenant_name(self):
        """Gets the tenant_name of this AlertDetail.  # noqa: E501


        :return: The tenant_name of this AlertDetail.  # noqa: E501
        :rtype: str
        """
        return self._tenant_name

    @tenant_name.setter
    def tenant_name(self, tenant_name):
        """Sets the tenant_name of this AlertDetail.


        :param tenant_name: The tenant_name of this AlertDetail.  # noqa: E501
        :type: str
        """

        self._tenant_name = tenant_name

    @property
    def ha_system_name(self):
        """Gets the ha_system_name of this AlertDetail.  # noqa: E501


        :return: The ha_system_name of this AlertDetail.  # noqa: E501
        :rtype: str
        """
        return self._ha_system_name

    @ha_system_name.setter
    def ha_system_name(self, ha_system_name):
        """Sets the ha_system_name of this AlertDetail.


        :param ha_system_name: The ha_system_name of this AlertDetail.  # noqa: E501
        :type: str
        """

        self._ha_system_name = ha_system_name

    @property
    def link(self):
        """Gets the link of this AlertDetail.  # noqa: E501


        :return: The link of this AlertDetail.  # noqa: E501
        :rtype: list[RestLinkRep]
        """
        return self._link

    @link.setter
    def link(self, link):
        """Sets the link of this AlertDetail.


        :param link: The link of this AlertDetail.  # noqa: E501
        :type: list[RestLinkRep]
        """

        self._link = link

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(AlertDetail, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AlertDetail):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, AlertDetail):
            return True

        return self.to_dict() != other.to_dict()
