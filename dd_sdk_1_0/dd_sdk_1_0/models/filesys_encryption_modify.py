# coding: utf-8

"""
    DataDomain Rest API Documentation

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from dd_sdk_1_0.configuration import Configuration


class FilesysEncryptionModify(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'operations': 'EncryptionOperations',
        'encryption_enable_disable_info': 'EncryptionEnableDisable',
        'algorithm_set_info': 'EncryptionType'
    }

    attribute_map = {
        'operations': 'operations',
        'encryption_enable_disable_info': 'encryption_enable_disable_info',
        'algorithm_set_info': 'algorithm_set_info'
    }

    def __init__(self, operations=None, encryption_enable_disable_info=None, algorithm_set_info=None, _configuration=None):  # noqa: E501
        """FilesysEncryptionModify - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._operations = None
        self._encryption_enable_disable_info = None
        self._algorithm_set_info = None
        self.discriminator = None

        self.operations = operations
        if encryption_enable_disable_info is not None:
            self.encryption_enable_disable_info = encryption_enable_disable_info
        if algorithm_set_info is not None:
            self.algorithm_set_info = algorithm_set_info

    @property
    def operations(self):
        """Gets the operations of this FilesysEncryptionModify.  # noqa: E501


        :return: The operations of this FilesysEncryptionModify.  # noqa: E501
        :rtype: EncryptionOperations
        """
        return self._operations

    @operations.setter
    def operations(self, operations):
        """Sets the operations of this FilesysEncryptionModify.


        :param operations: The operations of this FilesysEncryptionModify.  # noqa: E501
        :type: EncryptionOperations
        """
        if self._configuration.client_side_validation and operations is None:
            raise ValueError("Invalid value for `operations`, must not be `None`")  # noqa: E501

        self._operations = operations

    @property
    def encryption_enable_disable_info(self):
        """Gets the encryption_enable_disable_info of this FilesysEncryptionModify.  # noqa: E501


        :return: The encryption_enable_disable_info of this FilesysEncryptionModify.  # noqa: E501
        :rtype: EncryptionEnableDisable
        """
        return self._encryption_enable_disable_info

    @encryption_enable_disable_info.setter
    def encryption_enable_disable_info(self, encryption_enable_disable_info):
        """Sets the encryption_enable_disable_info of this FilesysEncryptionModify.


        :param encryption_enable_disable_info: The encryption_enable_disable_info of this FilesysEncryptionModify.  # noqa: E501
        :type: EncryptionEnableDisable
        """

        self._encryption_enable_disable_info = encryption_enable_disable_info

    @property
    def algorithm_set_info(self):
        """Gets the algorithm_set_info of this FilesysEncryptionModify.  # noqa: E501


        :return: The algorithm_set_info of this FilesysEncryptionModify.  # noqa: E501
        :rtype: EncryptionType
        """
        return self._algorithm_set_info

    @algorithm_set_info.setter
    def algorithm_set_info(self, algorithm_set_info):
        """Sets the algorithm_set_info of this FilesysEncryptionModify.


        :param algorithm_set_info: The algorithm_set_info of this FilesysEncryptionModify.  # noqa: E501
        :type: EncryptionType
        """

        self._algorithm_set_info = algorithm_set_info

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(FilesysEncryptionModify, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, FilesysEncryptionModify):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, FilesysEncryptionModify):
            return True

        return self.to_dict() != other.to_dict()
