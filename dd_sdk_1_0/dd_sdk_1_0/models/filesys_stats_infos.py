# coding: utf-8

"""
    DataDomain Rest API Documentation

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from dd_sdk_1_0.configuration import Configuration


class FilesysStatsInfos(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'filesys_stats_since_last_day': 'list[FilesysStatsInfo]',
        'filesys_stats_since_last_week': 'list[FilesysStatsInfo]',
        'filesys_stats_current': 'list[FilesysStatsInfo]',
        'filesys_stats_detailed': 'list[FilesysStatsInfo]',
        'paging_info': 'Paging',
        'link': 'list[RestLinkRep]'
    }

    attribute_map = {
        'filesys_stats_since_last_day': 'filesys_stats_since_last_day',
        'filesys_stats_since_last_week': 'filesys_stats_since_last_week',
        'filesys_stats_current': 'filesys_stats_current',
        'filesys_stats_detailed': 'filesys_stats_detailed',
        'paging_info': 'paging_info',
        'link': 'link'
    }

    def __init__(self, filesys_stats_since_last_day=None, filesys_stats_since_last_week=None, filesys_stats_current=None, filesys_stats_detailed=None, paging_info=None, link=None, _configuration=None):  # noqa: E501
        """FilesysStatsInfos - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._filesys_stats_since_last_day = None
        self._filesys_stats_since_last_week = None
        self._filesys_stats_current = None
        self._filesys_stats_detailed = None
        self._paging_info = None
        self._link = None
        self.discriminator = None

        if filesys_stats_since_last_day is not None:
            self.filesys_stats_since_last_day = filesys_stats_since_last_day
        if filesys_stats_since_last_week is not None:
            self.filesys_stats_since_last_week = filesys_stats_since_last_week
        if filesys_stats_current is not None:
            self.filesys_stats_current = filesys_stats_current
        if filesys_stats_detailed is not None:
            self.filesys_stats_detailed = filesys_stats_detailed
        if paging_info is not None:
            self.paging_info = paging_info
        if link is not None:
            self.link = link

    @property
    def filesys_stats_since_last_day(self):
        """Gets the filesys_stats_since_last_day of this FilesysStatsInfos.  # noqa: E501


        :return: The filesys_stats_since_last_day of this FilesysStatsInfos.  # noqa: E501
        :rtype: list[FilesysStatsInfo]
        """
        return self._filesys_stats_since_last_day

    @filesys_stats_since_last_day.setter
    def filesys_stats_since_last_day(self, filesys_stats_since_last_day):
        """Sets the filesys_stats_since_last_day of this FilesysStatsInfos.


        :param filesys_stats_since_last_day: The filesys_stats_since_last_day of this FilesysStatsInfos.  # noqa: E501
        :type: list[FilesysStatsInfo]
        """

        self._filesys_stats_since_last_day = filesys_stats_since_last_day

    @property
    def filesys_stats_since_last_week(self):
        """Gets the filesys_stats_since_last_week of this FilesysStatsInfos.  # noqa: E501


        :return: The filesys_stats_since_last_week of this FilesysStatsInfos.  # noqa: E501
        :rtype: list[FilesysStatsInfo]
        """
        return self._filesys_stats_since_last_week

    @filesys_stats_since_last_week.setter
    def filesys_stats_since_last_week(self, filesys_stats_since_last_week):
        """Sets the filesys_stats_since_last_week of this FilesysStatsInfos.


        :param filesys_stats_since_last_week: The filesys_stats_since_last_week of this FilesysStatsInfos.  # noqa: E501
        :type: list[FilesysStatsInfo]
        """

        self._filesys_stats_since_last_week = filesys_stats_since_last_week

    @property
    def filesys_stats_current(self):
        """Gets the filesys_stats_current of this FilesysStatsInfos.  # noqa: E501


        :return: The filesys_stats_current of this FilesysStatsInfos.  # noqa: E501
        :rtype: list[FilesysStatsInfo]
        """
        return self._filesys_stats_current

    @filesys_stats_current.setter
    def filesys_stats_current(self, filesys_stats_current):
        """Sets the filesys_stats_current of this FilesysStatsInfos.


        :param filesys_stats_current: The filesys_stats_current of this FilesysStatsInfos.  # noqa: E501
        :type: list[FilesysStatsInfo]
        """

        self._filesys_stats_current = filesys_stats_current

    @property
    def filesys_stats_detailed(self):
        """Gets the filesys_stats_detailed of this FilesysStatsInfos.  # noqa: E501


        :return: The filesys_stats_detailed of this FilesysStatsInfos.  # noqa: E501
        :rtype: list[FilesysStatsInfo]
        """
        return self._filesys_stats_detailed

    @filesys_stats_detailed.setter
    def filesys_stats_detailed(self, filesys_stats_detailed):
        """Sets the filesys_stats_detailed of this FilesysStatsInfos.


        :param filesys_stats_detailed: The filesys_stats_detailed of this FilesysStatsInfos.  # noqa: E501
        :type: list[FilesysStatsInfo]
        """

        self._filesys_stats_detailed = filesys_stats_detailed

    @property
    def paging_info(self):
        """Gets the paging_info of this FilesysStatsInfos.  # noqa: E501


        :return: The paging_info of this FilesysStatsInfos.  # noqa: E501
        :rtype: Paging
        """
        return self._paging_info

    @paging_info.setter
    def paging_info(self, paging_info):
        """Sets the paging_info of this FilesysStatsInfos.


        :param paging_info: The paging_info of this FilesysStatsInfos.  # noqa: E501
        :type: Paging
        """

        self._paging_info = paging_info

    @property
    def link(self):
        """Gets the link of this FilesysStatsInfos.  # noqa: E501


        :return: The link of this FilesysStatsInfos.  # noqa: E501
        :rtype: list[RestLinkRep]
        """
        return self._link

    @link.setter
    def link(self, link):
        """Sets the link of this FilesysStatsInfos.


        :param link: The link of this FilesysStatsInfos.  # noqa: E501
        :type: list[RestLinkRep]
        """

        self._link = link

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(FilesysStatsInfos, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, FilesysStatsInfos):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, FilesysStatsInfos):
            return True

        return self.to_dict() != other.to_dict()
